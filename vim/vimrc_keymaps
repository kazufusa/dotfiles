" let
let mapleader=","

" Ctrl + jjkl でウィンドウ間を移動
nmap <C-h> <C-w>h
nmap <C-j> <C-w>j
nmap <C-k> <C-w>k
nmap <C-l> <C-w>l
" map
" ctrlをspaceで置き換える
map <SPACE>a <C-a>
map <SPACE>b <C-b>
map <SPACE>c <C-c>
map <SPACE>d <C-d>
map <SPACE>e <C-e>
map <SPACE>f <C-f>
map <SPACE>g <C-g>
map <SPACE>h <C-h>
map <SPACE>i <C-i>
map <SPACE>j <C-j>
map <SPACE>k <C-k>
map <SPACE>l <C-l>
map <SPACE>m <C-m>
map <SPACE>n <C-n>
map <SPACE>o <C-o>
map <SPACE>p <C-p>
map <SPACE>q <C-q>
map <SPACE>r <C-r>
map <SPACE>s <C-s>
map <SPACE>t <C-t>
map <SPACE>u <C-u>
map <SPACE>v <C-v>
map <SPACE>w <C-w>
map <SPACE>x <C-x>
map <SPACE>y <C-y>
map <SPACE>z <C-z>

nnoremap 0 $
nnoremap 1 ^

" カーソル下の単語を * で検索
noremap <silent> * "vy/\V<C-r>=substitute(escape(@v, '\/'), "\n", '\\n', 'g')<CR><CR>
" TABにて対応ペアにジャンプ
noremap <Tab> %

" inoremap
" 入力モード中に素早くjjと入力した場合はESCとみなす
inoremap jj <Esc>

" vnoremap
" vを二回で行末まで選択
vnoremap v $h

" nnoremap
nnoremap <Leader>q :q<CR>
nnoremap <Leader>a :qa<CR>
nnoremap <Leader>o :only<CR>
nnoremap j gj
nnoremap k gk
nnoremap <Down> gj
nnoremap <Up>   gk
 " ESCを二回押すことでハイライトを消す
nnoremap <silent> <Esc><Esc> :nohlsearch<CR>
" 検索後にジャンプした際に検索単語を画面中央に持ってくる
nnoremap n nzz
nnoremap N Nzz
nnoremap * *zz
nnoremap # #zz
nnoremap g* g*zz
nnoremap g# g#zz
" j, k による移動を折り返されたテキストでも自然に振る舞うように変更
nnoremap j gj
nnoremap k gk
" Shift + 矢印でウィンドウサイズを変更
nnoremap <S-Left>  <C-w><<CR>
nnoremap <S-Right> <C-w>><CR>
nnoremap <S-Up>    <C-w>-<CR>
nnoremap <S-Down>  <C-w>+<CR>
" T + ? で各種設定をトグル
nnoremap [toggle] <Nop>
nnoremap T [toggle]
nnoremap <silent> [toggle]s :setl spell!<CR>:setl spell?<CR>
nnoremap <silent> [toggle]l :setl list!<CR>:setl list?<CR>
nnoremap <silent> [toggle]t :setl expandtab!<CR>:setl expandtab?<CR>
nnoremap <silent> [toggle]w :setl wrap!<CR>:setl wrap?<CR>

" cmap
" w!! でスーパーユーザーとして保存（sudoが使える環境限定）
cnoremap w!! w !sudo tee > /dev/null %

"macro
" set continuous number (ex. input "4co")
nnoremap <silent> co :ContinuousNumber <C-a><CR>
vnoremap <silent> co :ContinuousNumber <C-a><CR>
command! -count -nargs=1 ContinuousNumber let c = col('.')|for n in range(1, <count>?<count>-line('.'):1)|exec 'normal! j' . n . <q-args>|call cursor('.', c)|endfor
